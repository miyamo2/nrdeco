// Code generated by nrdeco@; DO NOT EDIT.
//
// See here for more information on nrdeco: https://github.com/miyamo2/nrdeco
package repository

import (
	"context"
	"github.com/miyamo2/nrdeco/examples/domain/model"
	"github.com/miyamo2/nrdeco/examples/domain
	"github.com/newrelic/go-agent/v3/newrelic"
	"os"
	"strings"
)

// NRUserRepository implements repository.UserRepository with New Relic instrumentation.
type NRUserRepository struct {
	repository.UserRepository
}

func (n *NRUserRepository) GetUserByIDWithContext(ctx context.Context, arg1 string) (*model.User, error) {
	if strings.ToLower(os.Getenv("NRDECO_ENABLED")) == "true" {
		defer newrelic.FromContext(ctx).StartSegment("repository.UserRepository.GetUserByIDWithContext").End()
	}
	return n.UserRepository.GetUserByIDWithContext(ctx, arg1)
}

func (n *NRUserRepository) GetAllUsersWithContext(ctx context.Context) ([]model.User, error) {
	if strings.ToLower(os.Getenv("NRDECO_ENABLED")) == "true" {
		defer newrelic.FromContext(ctx).StartSegment("repository.UserRepository.GetAllUsersWithContext").End()
	}
	return n.UserRepository.GetAllUsersWithContext(ctx)
}
